// mix module for goldmod - working for justice and collect
// made by /BudSpencer (2016)



// main variable 
defaultvalue "enable_mix_module" 1

// mixmode list
MIXMODES = "ctf instactf efficctf protect instaprotect efficprotect hold instahold effichold"
MIXMODES_N = "11 12 13 14 15 16 17 18 19"


chk_mix = 0
chk_spell_mix = 0

defmasterpass = $masterpass
defadminpass = $adminpass

defserverbotlimit = $serverbotlimit

defmaxclients = $maxclients


prepare_your_anus_for_mix = [

	
	min_clients = 4
	max_clients = 20
	
	new_admin_pass = mix::module::temp::admin
	new_master_pass = mix::module::temp::master
	
	set_max_clients = 20
	mute_spec = 1
	mastermode_c = 2
	
	new_server_bot_limit = 0
	
	
		if ( = $enable_mix_module 0 ) [
		
			pm $arg1 ( format "^f1>>> ^f4Mix Module is ^f2DISABLED ^f4on this server. ^f1<<<" )
			chk_mix = 0
			chk_spell_mix = 0
			
			] [
			
				if ( < ( numclients ) $min_clients ) [
				
				pm $arg1 ( format "^f1>>> ^f4A ^f2MixMode ^f4is ^f2IMPOSSIBLE ^f4for now. You need at least ^f2%1 ^f4players to ^f2start ^f4MixModule. ^f1<<<" $min_clients )
				chk_mix = 0
				chk_spell_mix = 0
				
				] 
				
				
				if ( > ( numclients ) $max_clients ) [
				
				pm $arg1 ( format "^f1>>> ^f4A ^f2MixMode ^f4is ^f2IMPOSSIBLE ^f4for now. Here are too much players to ^f2start ^f4MixModule. Only ^f2%1 ^f4players are allowed. ^f1<<<" $max_clients )
				chk_mix = 0
				chk_spell_mix = 0
				
				] [
				
					mastermode $mastermode_c
					maxclients $set_max_clients 
					adminpass $new_admin_pass
					masterpass $new_master_pass
				
				
						if ( = $mute_spec 1 ) [
				
						all = ( allplayers )
						looplist cn $all 
				
							if ( isspectator $cn ) [
					
								mute $cn 1
								pm $cn ( format "^f1>>> ^f4Your ^f2muted ^f4now because mix was ^f2started^f4. ^f1<<<" )
						]
					]
					
									pm $arg1 ( format "^f1>>> ^f4initzializing ^f2MixMode ^f4... done ^f1<<<")
									say ( format "^f1>>> ^f4MixMode Module has been ^f2enabled^f4. A ^f2Mix ^f4could be ^f2started ^f4now. ^f1<<<" )
									ircsay ( format "^f1>>> ^f4MixMode Module has been ^f2enabled^f4. A ^f2Mix ^f4could be ^f2started ^f4now. ^f1<<<" )
									echo ( format "^f1>>> ^f4MixMode Module has been ^f2enabled^f4. A ^f2Mix ^f4could be ^f2started ^f4now. ^f1<<<" )
					
									mapmode $arg3 (indexof $MODENAMES $arg2)
									pm $arg1 ( format "^f1>>> ^f4You must ^f2resume ^f4MixMode by typing ^f3#^f4mixpause 0. ^f1<<<" )
					
				]
		]
				
]
					
		
// persist teams on mix start

// main variable 
enable_persist = 1 // 1 - enable script | 0 - disable script
		
persist_set = [


	if ( = $enable_persist 1 ) [
	
		persist 1
		
	]
	
	
]





cmd_mix = [


	pigvar = 0  
	
		if ( = $chk_mix 0 ) [
		
			if ( = ( strstr $MODENAMES $arg2 ) -1 ) [
			
				pm $arg1 (format "^f1>>> ^f4Sorry, this is a ^f2wrong argument^f4: %1 ^f1<<<" $arg2 ) 
				
			] [
				
				current_mode = ( getvalue $arg2 ( at $MODENAMES ) )	
				mode_s = $arg2 
				
				if ( = ( isinlist $MIXMODES $arg2 ) 0 ) [

					pm $arg1 ( format "^f1>>> ^f4Sorry, this ^f2Game Mode(%1) ^f4isnt a ^f2MixMode^f4. ^f1<<<" $mode_s )
					
					] [
				
					chk_mix = 1
					chk_spell_mix = 1
					persist_set
					prepare_your_anus_for_mix
			
						if ( = $chk_mix 1 ) [
			
						pause 1 
			
						] 
						
					]
			
			]
			
		] [
		
			pm $arg1 ( format "^f1>>> ^f4Oh, i think, a ^f2Mix ^f4already have been ^f2initiated^f4. ^f1<<<" )
			
			]
			
			
]


// script, that pauses game, if somebody leavs tournament 
// implemented by /BudSpencer (2016)
enable_pause_script = 1
enable_msg = 1

pause_if_somebody_leave = [


	if ( = $chk_mix 1 ) [
	
	if ( = $enable_pause_script 1 ) [
	
	if ( = $enable_msg 1 ) [
	
	if ( = ( isspectator $arg1 ) 0 ) [
	
		pause 1 

	pname = ( getname $arg1 )
	pcn = ( getcn $arg1 )
	
say ( format "^f1>>> ^f4Player ^f2%1(%2) ^f4left ^f2Mix^f4. Game is ^f2paused ^f4now. ^f1<<<" $pname $pcn )
ircsay ( format "^f1>>> ^f4Player ^f2%1(%2) ^f4left ^f2Mix^f4. Game is ^f2paused ^f4now. ^f1<<<" $pname $pcn )
echo ( format "^f1>>> ^f4Player ^f2%1(%2) ^f4left ^f2Mix^f4. Game is ^f2paused ^f4now. ^f1<<<" $pname $pcn )

				]
				
			]
			
		]
		
	]
	
	
]



// show scoreboard on end
// made by /BudSpencer (2016)

defaultvalue "enable_scoreboard" 1
return_msg = 1
player_priv = 1

mix_scoreboard = [


	if ( = $chk_mix 1 ) [
	
	current_mode = (getvalue $arg2 (at $MODENAMES (getmode)))	
	
		if ( = ( ismixmode $current_mode ) 1 ) [
		
		if ( = ( getteamscores evil ) ( getteamscores good ) ) [
				
				score_e = ( getteamscores evil )
				score_g = ( getteamscores good )
				score_c = ( getteamscores ( getteam $cn ) ) 
		
		if ( = $return_msg 1 ) [
		
		say ( format "^f1>>> ^f5END MIX STATE: ^f4Current ^f2MixMode ^f4has ^f2ended^f4. Its: ^f2%1/%2 ^f4- ^f2No team ^f4wins^f4. ^f1<<<" $score_e $score_g )
			
			]
			
		] 
		
		
		if ( > ( getteamscores evil ) ( getteamscores good ) ) [
				
				score_e = ( getteamscores evil )
				score_g = ( getteamscores good )
				score_c = ( getteamscores ( getteam $cn ) ) 
		
		if ( = $return_msg 1 ) [
		
		say ( format "^f1>>> ^f5END MIX STATE: ^f4Current ^f2MixMode ^f4has ^f2ended^f4. Its: ^f2%1/%2 ^f4- Team ^f2evil ^f4wins^f4. ^f1<<<" $score_e $score_g )
		
			]
			
		] 
		
		
		if ( < ( getteamscores evil ) ( getteamscores good ) ) [
				
				score_e = ( getteamscores evil )
				score_g = ( getteamscores good )
				score_c = ( getteamscores ( getteam $cn ) ) 
		
		if ( = $return_msg 1 ) [
		
		say ( format "^f1>>> ^f5END MIX STATE: ^f4Current ^f2MixMode ^f4has ^f2ended^f4. Its: ^f2%1/%2 ^f4- Team ^f2good ^f4wins^f4. ^f1<<<" $score_e $score_g )
					]
					
				]
				
				
	
			]
	
		]
	
	
]



// reset script

reset_vars = [


	if ( = $chk_mix 1 ) [
	
	masterpass $defmasterpass
	adminpass $defadminpass 
	
	maxclients $defmaxclients
	
	persist 0
	
	serverbotlimit $defserverbotlimit
	
	say ( format "^f1>>> ^f4Mix has ^f2ended^f4. From next ^f2mapstart ^f4on, you can do ^f3#^f4mix <mode> <map> to ^f2start ^f4a new ^f2Mix^f4. ^f1<<<" )
	
	chk_mix = 0
	chk_spell_mix = 0
	
	]
	
	
]


// command to pause mix
// only works if mixmode is enabled

cmd_mixpause = [


	if ( = $chk_mix 1 ) [
	
		pause $arg2
		
			pname = ( getname $arg1 )
			pcn = ( getcn $arg1 )
			
		say ( format "^f1>>> ^f4Current ^f2MixMode ^f4was ^f2%1 ^f4by ^f2%2(%3)^f4. ^f1<<<" ( ? $arg2 "paused" "resumed" ) $pname $pcn )
		
		] [
		
		pm $arg1 ( format "^f1>>> ^f4This command only works in ^f2MixMode^f4. ^f1<<<" ) 
			
			]
			
			
]
		
	

		


// command to stop mix
// only works if mixmode is enabled

// use that mode and map if not defined in server-init.cfg
defaultvalue "defmap" "complex"
defaultvalue "defmode" 0 

cmd_mixstop = [

		
	if ( = $chk_mix 1 ) [
	
		pname = ( getname $arg1 )
		pcn = ( getcn $arg1 )
		
		chk_mix = 0
		say ( format "^f1>>> ^f4Player ^f2%1(%2) ^f4has ^f2stopped ^f4MixMode. Game will not longer run. ^f1<<<" $pname $pcn )
		mapmode $defmap $defmode // switchs back to default map/mode
		
	] [
	
	pm $arg1 ( format "^f1>>> ^f4This command only works in ^f2MixMode^f4. ^f1<<<" )
	
	]

	
]
		

// shows mixmode help
// made by /BudSpencer (2016)
cmd_mixcmd = [

pm $arg1 ( format "^f1>>> ^f3#^f4mixcmd ^f7- ^f2That command returns list of all commands only working, if MixMode enabled. ^f1<<<" )
pm $arg1 ( format "^f1>>> ^f3#^f4mixpause ^f7- ^f2That command pauses/resumes current MixMode. ^f1<<<" )
pm $arg1 ( format "^f1>>> ^f3#^f4mixstop ^f7- ^f2That command stops current MixMode immediately. ^f1<<<" )
pm $arg1 ( format "^f1>>> ^f3#^f4mixcheck ^f7- ^f2That command returns status of MixModule. ( Possible: returns 'enabled' or 'disabled' ) ^f1<<<" )
pm $arg1 ( format "^f1>>> ^f3#^f4mixrestart ^f7- ^f2That command restarts MixMode to same Map/Mode. ^f1<<<" )

]

// command to check, if MixModule is enabled
// added by /BudSpencer ( 2016 )

enabled = 1

cmd_mixcheck = [

	
	if ( = $enabled 1 ) [
	
		if ( = $enable_mix_module 1 ) [
		
			say ( format "^f1>>> ^f4Checking ^f2MixModule ^f4... done ^f1<<<" )
			say ( format "^f1>>> ^f4Status of ^f2MixModule: ^f4It's enabled ^f1<<<" )
		
		] [
	
			say ( format "^f1>>> ^f4Checking ^f2MixModule ^f4... done ^f1<<<" )
			say ( format "^f1>>> ^f4Status of ^f2MixModule: ^f4It's disabled ^f1<<<" )
	
		]
		
	] [
	
	pm $arg1 ( format "^f1>>> ^f4This command only works in ^f2MixMode^f4. ^f1<<<" )
	
	]
	
	
]

// command that restarts mix on current map/mode
// made by /BudSpencer ( 2016 )

enabled = 1

cmd_mixrestart = [

	
	if ( = $chk_mix 1 ) [
	
		curr_map = ( getmap )
		curr_mode = ( getmode )
		
		pname = ( getname $arg1 )
		pcn = ( getcn $arg1 )
		
		mapmode $curr_map $curr_mode
		pause 1 
		
			say ( format "^f1>>> ^f4Current ^f2MixMode ^f4was ^f2restarted ^f4by ^f2%1(%2)^f4. ^f1<<<" $pname $pcn )
			
		] [
		
		pm $arg1 ( format "^f1>>> ^f4This command only works in ^f2MixMode^f4. ^f1<<<" )
		
	]
		
		
]


	


addhandler "ondisconnect" pause_if_somebody_leave		
addhandler "onimission" mix_scoreboard
addhandler "onimission" reset_vars


registercommand "mix" cmd_mix 2 "ww" "mix <mode> <map> ^f2This command starts Mix Module. ( reseting variables at intermission )"
registercommand "mixpause" cmd_mixpause 2 "i" "mixpause <1|0> ^f2That command pauses/resumes current MixMode."
registercommand "mixstop" cmd_mixstop 3 "" "mixstop ^f2This command stop current MixMode immediately."
registercommand "mixcmd" cmd_mixcmd 2 "" "mixcmd ^f2That command shows all commands, that are only working in MixMode."
registercommand "mixcheck" cmd_mixcheck 2 "" "mixcheck ^f2This command returns status of MixModule. ( Possible: returns 'enabled' or 'disabled' )"	
registercommand "mixrestart" cmd_mixrestart 3 "" "mixrestart ^f2This command restarts MixMode to same Map/Mode."
																				
	
	
	
	


 
					
				
				
				
			
	
	
	
	