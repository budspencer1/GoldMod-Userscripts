// Mapsucks module - forces intermission if limit is reached
// made by /BudSpencer ( 2016 )


percentage = 0.65 // 65 % of connected players
complete_mapsucks = 0
hasvotedformapsucks = 0

Mapsucks_Core = [

mapsucks_limit = ( * ( numclients ) $percentage )
mapsucks_min_clients = 4
curr_map = ( getmap )

if ( = ( isinlist $VOTEKICK-NUMBERS ( * ( numclients ) $percentage ) ) 0 ) [

mapsucks_limit = 7

]

complete_mapsucks = 0
hasvotedformapsucks = 0

sucks_map = ( getvar $curr_map mapsucks )
sucks_map = ( + $sucks_map 1 )

hasvotedformapsucks = ( getvar $arg1 hasalreadyvoted )
hasvotedformapsucks = ( + $hasvotedformapsucks 1 ) 

if ( < ( numclients ) $mapsucks_min_clients ) [

pm $arg1 ( format "^f7Here are too ^f3less ^f7players ^f7for ^f4mapsucks ^f7to work. You need at least ^f4%1 ^f7Clients." $mapsucks_min_clients )

] [

if ( = ( getvar $arg1 hasalreadyvoted ) 1 ) [

pm $arg1 ( format "^f7You've already ^f3voted ^f7for ^f4intermission ^f7on current ^f4map^f7." )

] [

if ( = $gamemillis 0 ) [

pm $arg1 ( format "^f7It's already ^f3intermission^f7. You can't ^f4vote ^f7anymore." )

] [

if ( < $sucks_map $mapsucks_limit ) [

	say ( format "Player ^f3%1(%2) ^f7has voted for ^f4intermission^f7. Type: ^f3#^f7mapsucks ^f7to ^f4vote ^f7for intermission. ^nVotes are ^f3%3 ^f7of ^f3%4^f7" ( getname $arg1 ) $arg1 $sucks_map $mapsucks_limit )
	setvar $arg1 hasalreadyvoted 1
	setvar $curr_map mapsucks $sucks_map	
	
	] [
	
if ( >= $sucks_map $mapsucks_limit ) [

if ( > $sucks_map $mapsucks_limit ) [

sucks_map = $mapsucks_limit

]

	say ( format "^f7Player ^f3%1(%2) ^f7voted for ^f4intermission^f7. Votes are ^f3%3 ^f7of ^f3%4	^f7- It's ^f4intermission^f7." ( getname $arg1 ) $arg1 $sucks_map $mapsucks_limit )
	setvar $arg1 hasalreadyvoted 1
	setvar $curr_map mapsucks $sucks_map
	
	sleep 50 [
	
	forceintermission
	
	]
					]
					
				]
				
			]
			
		]
						
	]                                                                                                                 
	
]



reset_all_ms = [

all = ( allplayers )
	looplist cn $all [
	
	curr_map = ( getmap )
	
	setvar $cn hasalreadyvoted 0
	setvar $curr_map mapsucks 0
	
	]


]


// handler and command register 
addhandler "onmapstart" reset_all_ms
registercommand "mapsucks" Mapsucks_Core 1 "" "mapsucks ^f4This command votes for intermission ( skips this map )."
